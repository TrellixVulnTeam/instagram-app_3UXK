{"ast":null,"code":"var _jsxFileName = \"/Users/applemisharoz2003gmail.com/Desktop/interview/interview-summery/src/components/Posts/PostList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Post from './Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = () => {\n  _s();\n\n  const [postsPata, setPostsData] = useState([]);\n  const [postCommentInfo, setPostCommentInfo] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3003/posts').then(res => res.json()).then(data => setPostsData(data));\n  }, []);\n\n  const handleCommentPost = (e, inputId) => {\n    const currentPostInput = postsPata.find(_ref => {\n      let {\n        id\n      } = _ref;\n      return id === inputId;\n    });\n\n    if (currentPostInput) {\n      const newPostComment = {\n        value: e.target.value\n      };\n      console.log(currentPostInput);\n      setPostCommentInfo(...newPostComment, newPostComment);\n    }\n  };\n\n  console.log(postCommentInfo);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: postsPata.map((_ref2, i) => {\n      let {\n        comment,\n        dateOfPost,\n        nickName,\n        countOfLikes,\n        photoDescription,\n        subtitle,\n        id\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Post, {\n        id: id,\n        postCommentInfo: postCommentInfo,\n        handleCommentPost: handleCommentPost,\n        comment: comment,\n        nickName: nickName,\n        countOfLikes: countOfLikes,\n        photoDescription: photoDescription,\n        subtitle: subtitle,\n        dateOfPost: dateOfPost\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostList, \"raGRp/+6plUXnirJ+2M/at5Os50=\");\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","Post","PostList","postsPata","setPostsData","postCommentInfo","setPostCommentInfo","fetch","then","res","json","data","handleCommentPost","e","inputId","currentPostInput","find","id","newPostComment","value","target","console","log","map","i","comment","dateOfPost","nickName","countOfLikes","photoDescription","subtitle"],"sources":["/Users/applemisharoz2003gmail.com/Desktop/interview/interview-summery/src/components/Posts/PostList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Post from './Post';\n\nconst PostList = () => {\n  const [postsPata, setPostsData] = useState([]);\n  const [postCommentInfo, setPostCommentInfo] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:3003/posts')\n      .then((res) => res.json())\n      .then((data) => setPostsData(data));\n  }, []);\n\n  const handleCommentPost = (e, inputId) => {\n    const currentPostInput = postsPata.find(({ id }) => id === inputId);\n    if (currentPostInput) {\n      const newPostComment = {\n        value: e.target.value,\n      };\n      console.log(currentPostInput);\n      setPostCommentInfo(...newPostComment, newPostComment);\n    }\n  };\n\n  console.log(postCommentInfo);\n\n  return (\n    <div>\n      {postsPata.map(\n        ({ comment, dateOfPost, nickName, countOfLikes, photoDescription, subtitle, id }, i) => (\n          <Post\n            key={i}\n            id={id}\n            postCommentInfo={postCommentInfo}\n            handleCommentPost={handleCommentPost}\n            comment={comment}\n            nickName={nickName}\n            countOfLikes={countOfLikes}\n            photoDescription={photoDescription}\n            subtitle={subtitle}\n            dateOfPost={dateOfPost}\n          />\n        ),\n      )}\n    </div>\n  );\n};\n\nexport default PostList;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD;EAEAC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAUP,YAAY,CAACO,IAAD,CAF9B;EAGD,CAJQ,EAIN,EAJM,CAAT;;EAMA,MAAMC,iBAAiB,GAAG,CAACC,CAAD,EAAIC,OAAJ,KAAgB;IACxC,MAAMC,gBAAgB,GAAGZ,SAAS,CAACa,IAAV,CAAe;MAAA,IAAC;QAAEC;MAAF,CAAD;MAAA,OAAYA,EAAE,KAAKH,OAAnB;IAAA,CAAf,CAAzB;;IACA,IAAIC,gBAAJ,EAAsB;MACpB,MAAMG,cAAc,GAAG;QACrBC,KAAK,EAAEN,CAAC,CAACO,MAAF,CAASD;MADK,CAAvB;MAGAE,OAAO,CAACC,GAAR,CAAYP,gBAAZ;MACAT,kBAAkB,CAAC,GAAGY,cAAJ,EAAoBA,cAApB,CAAlB;IACD;EACF,CATD;;EAWAG,OAAO,CAACC,GAAR,CAAYjB,eAAZ;EAEA,oBACE;IAAA,UACGF,SAAS,CAACoB,GAAV,CACC,QAAkFC,CAAlF;MAAA,IAAC;QAAEC,OAAF;QAAWC,UAAX;QAAuBC,QAAvB;QAAiCC,YAAjC;QAA+CC,gBAA/C;QAAiEC,QAAjE;QAA2Eb;MAA3E,CAAD;MAAA,oBACE,QAAC,IAAD;QAEE,EAAE,EAAEA,EAFN;QAGE,eAAe,EAAEZ,eAHnB;QAIE,iBAAiB,EAAEO,iBAJrB;QAKE,OAAO,EAAEa,OALX;QAME,QAAQ,EAAEE,QANZ;QAOE,YAAY,EAAEC,YAPhB;QAQE,gBAAgB,EAAEC,gBARpB;QASE,QAAQ,EAAEC,QATZ;QAUE,UAAU,EAAEJ;MAVd,GACOF,CADP;QAAA;QAAA;QAAA;MAAA,QADF;IAAA,CADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CA3CD;;GAAMtB,Q;;KAAAA,Q;AA6CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}